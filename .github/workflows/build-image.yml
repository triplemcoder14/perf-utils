# name: perfutils

# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# on:
#   schedule:
#     - cron: '29 20 * * *'
#   push:
#     branches: [ "main" ]
#     tags: [ 'v*.*.*' ]
#   pull_request:
#     branches: [ "main" ]

# env:
#   # Use docker.io for Docker Hub if empty
#   REGISTRY: ghcr.io
#   # github.repository as <account>/<repo>
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       id-token: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # Install the cosign tool except on PR
#       - name: Install cosign
#         if: github.event_name != 'pull_request'
#         uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
#         with:
#           cosign-release: 'v2.2.4'

#       # Set up BuildKit Docker container builder to be able to build
#       # multi-platform images and export cache
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

#       # Login against a Docker registry except on PR
#       - name: Log into registry ${{ env.REGISTRY }}
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       # Extract metadata (tags, labels) for Docker
#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#       # Build and push Docker image with Buildx
#       - name: Build and push Docker image
#         id: build-and-push
#         uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
#         with:
#           context: .
#           push: ${{ github.event_name != 'pull_request' }}
#           tags: |
#             ${{ steps.meta.outputs.tags }}
#             ghcr.io/${{ github.repository }}:latest
#             ghcr.io/${{ github.repository }}:v${{ github.run_number }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max
#       # - name: Build and push Docker image
#       #   id: build-and-push
#       #   uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
#       #   with:
#       #     context: .
#       #     push: ${{ github.event_name != 'pull_request' }}
#       #     tags: |
#       #       ${{ steps.meta.outputs.tags }}
#       #       ghcr.io/${{ github.repository }}:latest  # Add latest tag
#       #       ghcr.io/${{ github.repository }}:v${{ github.run_number }}  # Use run number for versioning
#       #     labels: ${{ steps.meta.outputs.labels }}
#       #     cache-from: type=gha
#       #     cache-to: type=gha,mode=max

#       # Sign the resulting Docker image digest except on PRs.
#       - name: Sign the published Docker image
#         if: ${{ github.event_name != 'pull_request' }}
#         env:
#           TAGS: ${{ steps.meta.outputs.tags }}
#           DIGEST: ${{ steps.build-and-push.outputs.digest }}
#         run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}



name: Build and Push Container Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }} #  sing the PAT stored in GitHub secrets

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          build-args: |
            VERSION=${{ github.sha }}
            COMMIT=${{ github.sha }}